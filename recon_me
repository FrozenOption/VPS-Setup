#!/bin/bash
RED='\033[0;31m';
GREEN='\033[0;32m';
YELLOW='\033[1;33m';
NC='\033[0m'

echo -e "${YELLOW}
         __          __  _ 
        / _|        / _|| |
  _ __ | |_  _   _ | |_ | |
 | '__||  _|| | | ||  _|| |
 | |   | |  | |_| || |  |_|
 |_|   |_|   \__,_||_|  (_)
                           
 ${GREEN}@winteriscoming${NC}";


while getopts ":d:" input;do
        case "$input" in
                d) domain=${OPTARG}
                        ;;
                esac
        done
if [ -z "$domain" ]     
        then
                echo "Please give a domain like \"-d domain.com\""
                exit 1
fi

mkdir .$domain
echo "";
echo -e "${RED}Finding Subdomains for $domain${NC}";

# sectrails
echo -ne "${YELLOW}Security Trails: "
sectrails $domain 2>/dev/null >sectrails.txt;
echo -e "${YELLOW}$(wc -l sectrails.txt | cut -d' ' -f1) subdomains${NC}";
mv sectrails.txt .$domain/;

# rapidns
echo -ne "${YELLOW}Rapidns: "
rapidns $domain 2>/dev/null >rapidns.txt;
echo -e "${YELLOW}$(wc -l rapidns.txt | cut -d' ' -f1) subdomains${NC}";
mv rapidns.txt .$domain/;

# certsh
echo -ne "${YELLOW}Cert.sh: "
crtsh $domain 2>/dev/null >certsh.txt;
echo -e "${YELLOW}$(wc -l certsh.txt | cut -d' ' -f1) subdomains${NC}";
mv certsh.txt .$domain/;

# subfinder
echo -ne "${YELLOW}subfinder: "
subfinder -d $domain -silent 2>/dev/null >subfinder.txt
echo -e "${YELLOW}$(wc -l subfinder.txt | cut -d' ' -f1) subdomains${NC}";
mv subfinder.txt .$domain/;

# JLDC
echo -ne "${YELLOW}jldc: "
jldc $domain 2>/dev/null >jldc.txt
echo -e "${YELLOW}$(wc -l jldc.txt | cut -d' ' -f1) subdomains${NC}";
mv jldc.txt .$domain/;

# assetfinder
echo -ne "${YELLOW}assetfinder: "
assetfinder --subs-only $domain 2>/dev/null >assetfinder.txt
echo -e "${YELLOW}$(wc -l assetfinder.txt | cut -d' ' -f1) subdomains${NC}";
mv assetfinder.txt .$domain/;

# findomain
echo -ne "${YELLOW}findomain: "
findomain -t $domain -u findomain.txt 1>/dev/null 2>/dev/null
echo -e "${YELLOW}$(wc -l findomain.txt | cut -d' ' -f1) subdomains${NC}";
mv findomain.txt .$domain/;

# google dorks
echo -ne "${YELLOW}google dorks: "
sd-goo $domain 2>/dev/null >googledorks1.txt;sleep 5
sd-goo $domain 2>/dev/null >>googledorks1.txt;sleep 5;
sd-goo $domain 2>/dev/null >>googledorks1.txt
cat googledorks1.txt | sort -u > googledorks.txt; rm googledorks1.txt;
echo -e "${YELLOW}$(wc -l googledorks.txt | cut -d' ' -f1) subdomains${NC}";
mv googledorks.txt .$domain/;

# github
echo -ne "${YELLOW}github: "
export export GITHUB_TOKEN=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;
github-subdomains -d $domain 2>/dev/null>github1.txt;sleep 6;
github-subdomains -d $domain 2>/dev/null>>github1.txt;sleep 6;
github-subdomains -d $domain 2>/dev/null>>github1.txt;sleep 6;
github-subdomains -d $domain 2>/dev/null>>github1.txt;sleep 6;
github-subdomains -d $domain 2>/dev/null>>github1.txt;sleep 6;
cat github1.txt | sort -u > github.txt; rm github1.txt;
echo -e "${YELLOW}$(wc -l github.txt | cut -d' ' -f1) subdomains${NC}";
mv github.txt .$domain/;

# waybackurls
echo -ne "${YELLOW}waybackurls: "
waybackurls $domain | unfurl format %d | sort -u > waybackurls.txt
echo -e "${YELLOW}$(wc -l waybackurls.txt | cut -d' ' -f1) subdomains${NC}";
mv waybackurls.txt .$domain/;

# gau
echo -ne "${YELLOW}waybackurls: "
gau $domain | unfurl format %d | sort -u > gau.txt
echo -e "${YELLOW}$(wc -l gau.txt | cut -d' ' -f1) subdomains${NC}";
mv gau.txt .$domain/;

# amass
echo -ne "${YELLOW}amass: "
amass enum -passive -d $domain 2>/dev/null >amass1.txt
amass enum -active -d $domain 2>/dev/null >>amass1.txt
cat amass1.txt | sort -u > amass.txt;rm amass1.txt;
echo -e "${YELLOW}$(wc -l amass.txt | cut -d' ' -f1) subdomains${NC}";
mv amass.txt .$domain/;

# firece
echo -ne "${YELLOW}fierce: "
fierce --domain $domain>fierce1.txt; cat fierce2.txt | grep Found | awk '{print $2}' | sed 's/\.$//g'>fierce.txt
echo -e "${YELLOW}$(wc -l fierce.txt | cut -d' ' -f1) subdomains${NC}";
mv fierce.txt .$domain/;

# BRUTEFORCING
echo "";
echo -e "${RED}Bruteforcing Subdomains for $domain${NC}";

# amass
echo -ne "${YELLOW}amass: ";
amass enum -active -brute -d $domain 2>/dev/null >amass-bruteforce.txt
echo -e "${YELLOW}$(wc -l amass-bruteforce.txt | cut -d' ' -f1) subdomains${NC}";
mv amass-bruteforce.txt .$domain/;

# puredns
echo -ne "${YELLOW}puredns: ";
puredns bruteforce wordlists/best-dns-wordlist.txt $domain --resolvers tools/resolvers.txt -w puredns.txt 1>/dev/null 2>/dev/null;
echo -e "${YELLOW}$(wc -l puredns.txt | cut -d' ' -f1) subdomains${NC}";
mv puredns.txt .$domain/;

# Sorting the results
echo "";
echo -e "${RED}Sorting the results for $domain${NC}";
cat .$domain/* | sort -u>raw.txt
echo -e "Total Unique Found: ${YELLOW}$(wc -l raw.txt | cut -d' ' -f1) subdomains${NC}";

# Doing Alterations/Permutations
echo "";
echo -e "${RED}Doing alterations/permutations with the results${NC}";

